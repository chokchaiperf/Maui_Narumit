# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
jobs:
  ios_build:
    macos:
      xcode: "16.1.0"
    steps:
      - checkout
      - run:
          name: Check HomeBrew
          command: |
            brew doctor
      - run:
          name: install certificate and provisioning profile
          command: | 
            # create variables
            CERTIFICATE_PATH=/Users/distiller/project/build_certificate.p12
            PP_PATH=/Users/distiller/project/ManaFailFast2023AdHoc.mobileprovision
            KEYCHAIN_PATH=/Users/distiller/project/app-signing.keychain-db

            # import certificate and provisioning profile from secrets
            echo -n "${Certificate}" | base64 --decode -o $CERTIFICATE_PATH
            echo -n "${Provisioning_profile}" | base64 --decode -o $PP_PATH

            # create temporary keychain
            security create-keychain -p "${KEYCHAIN_PASSWORD} $KEYCHAIN_PATH
            security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
            security unlock-keychain -p "${KEYCHAIN_PASSWORD} $KEYCHAIN_PATH

            # import certificate to keychain
            security import $CERTIFICATE_PATH -P "${KEYCHAIN_PASSWORD}" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
            security set-key-partition-list -S apple-tool:,apple: -k "${KEYCHAIN_PASSWORD}" $KEYCHAIN_PATH
            security list-keychain -d user -s $KEYCHAIN_PATH

            # apply provisioning profile
            mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
            cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - run:
          name: Install .NET SDK
          command: |
            brew install --cask dotnet-sdk
            sudo dotnet workload install maui
      - run:
          name: Build .NET MAUI Project
          command: |
            cd Maui_Narumit
            dotnet build -f:net8.0-ios /p:ArchiveOnBuild=true /p:EnableAssemblyILStripping=false 
      # - store_artifacts:
      #     path: './Maui_Narumit/bin'
      #     destination: artifact-file
  android_build:
    macos:
      xcode: "16.1.0"
    steps:
      - checkout
      - run:
          name: install code siginig key for android
          command: | 
            ANDROID_CERTIFICATE_PATH=/Users/distiller/project/mana-key.jks
            echo -n "${AndroidSigning_file}" | base64 --decode -o $ANDROID_CERTIFICATE_PATH
            
      - run:
          name: Uninstall existing JDK version
          command: |
            # Uninstall JDK version 23 if installed
            brew list
            brew uninstall --cask adoptopenjdk
      
      - run:
          name: Download and Setup Android SDK
          command: |
            # Install OpenJDK 17
            brew install openjdk@17
            export JAVA_HOME=$(/usr/libexec/java_home -v 17)
            export PATH=$JAVA_HOME/bin:$PATH

            # Download Android SDK command-line tools
            curl -o commandlinetools-mac.zip https://dl.google.com/android/repository/commandlinetools-mac-7583922_latest.zip
            
            # Create Android SDK directory
            mkdir -p ~/Library/Android/Sdk/cmdline-tools
            
            # Extract the downloaded tools
            unzip commandlinetools-mac.zip -d ~/Library/Android/Sdk/cmdline-tools
            
            # Move the extracted tools to the correct directory
            mv ~/Library/Android/Sdk/cmdline-tools/cmdline-tools ~/Library/Android/Sdk/cmdline-tools/latest
            
            # Set environment variables
            export ANDROID_HOME=~/Library/Android/Sdk
            export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
            
            # Accept licenses
            yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
            
            # Update SDK tools
            $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update

      - run: 
          name: manage android sdk
          command: |
            ~/Library/Android/Sdk/cmdline-tools/latest/bin/sdkmanager  "tools" "platform-tools" "build-tools;34.0.0" "platforms;android-34"
      - run:
          name: Install .NET SDK
          command: |
            brew install --cask dotnet-sdk
            sudo dotnet workload install maui
      - run:
          name: Build .NET MAUI Project
          command: |
            cd Maui_Narumit
            dotnet restore
            dotnet publish -f net8.0-android -c Release 
      # Backup stage -------------------------------------------------------------
      # - run:
      #     name: Build .NET MAUI Project
      #     command: |
      #       cd Maui_Narumit
      #       dotnet restore --inactive
      #       dotnet build -f:net8.0-android /p:ArchiveOnBuild=true /p:EnableAssemblyILStripping=false 
      # - store_artifacts:
      #     path: './Maui_Narumit/bin/Release/net8.0-android/com.companyname.maui_narumit-Signed.aab'
      #     destination: artifact-file

workflows:
  version: 2
  build_and_test:
    jobs:
      # - ios_build
      - android_build